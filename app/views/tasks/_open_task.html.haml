- current_user_id = current_user.id
- task_date = task.task_date
- updates_count = task.updates.count
- likes_count = task.likes_count
- task_id = task.id
- diff = task_date.to_i - Time.now.to_i
.task-card{"data-task-id" => "#{task.id}", :class => "category-#{task.category}"}
  .row
    .col-xs-8.col-md-8.summary
      %h3.card-title
        =render 'tasks/icon', task: task
        =task.title
        .arrow
      %h4
        =task_date.strftime('%A')
        -if task_date > Time.now
          ="(in #{distance_of_time_in_words(diff)})"
        -else
          ="(#{distance_of_time_in_words(diff)} ago)"
      -if updates_count > 0
        .comments-count
          =updates_count
        %i.fa.fa-comment.task-card-icon
      -if likes_count > 0
        .hearts-count
          =likes_count
        %i.fa.fa-heart.task-card-icon.heart-icon-color
    .col-xs-4.col-md-4
      %h4.sign-up=link_to "Volunteer?", group_task_path(group, task_id, params: { task: {assignee_id: current_user_id}}), method: :patch, remote: true
  .row.task-details
    .col-xs-12
      .section-subtitle
        Where
      =task.location.empty? ? "No location details." : task.location
    .col-xs-12
      .section-subtitle
        Notes
      =task.information.empty? ? "No additional notes." : task.information
    .row
      .section-subtitle
        Comments
    .row.updates{"data-id" => "#{task.id}"}
      -task.ordered_updates.each do |update|
        =render "updates/update", update: update
    .row
      =render "updates/form", group: @group, task: task, update: @update

    .section-subtitle
      Actions
    -if current_user.admin?
      =link_to edit_group_task_path(group, task) do
        %span.awesome
          %span.glyphicon.glyphicon-edit
          Edit
      =link_to group_task_path(group, task), method: :delete, data: { confirm: 'Are you sure you want to delete this task?' } do
        %span.awesome
          %span.glyphicon.glyphicon-trash
          Delete

