.container
  .row.task-index-header
    %h1.application-section-header
      Care tasks for
      =best_in_place @group, :name
      %span.edit-indicator.glyphicon.glyphicon-pencil
  .row
    .col-xs-12.col-md-6
      .card
        .section-title
          My Care Tasks
          ="(#{@my_tasks.count})"
        .section-contents
          -unless @my_tasks.empty?
            -@my_tasks.sort_by(&:task_date).each do |task|
              =render 'task', task: task, group: @group
      .card
        .section-title
          Recent Care Tasks
        .section-contents
          -unless @past_tasks.empty?
            -@past_tasks.sort_by(&:task_date).reverse.each do |task|
              =render 'recent_task', task: task, group: @group
          -else
            %h3.card-title.padded
              ="No tasks have been completed yet!"

    .col-xs-12.col-md-5.card{style: 'margin-bottom: 15px'}
      .section-title
        %ul.nav.nav-pills
          %li.active
            %a{href: "#all", 'data-toggle' => "pill"}
              Upcoming
              ="(#{@others_tasks.count})"
          %li
            %a{href: "#open", 'data-toggle' => "pill"}
              Open
              ="(#{@open_tasks.count})"
        =link_to new_group_task_path(current_user.group) do
          %h4.add-new Add
      .section-contents
        .tab-content
          .tab-pane.active{id: "all"}
            -unless @others_tasks.empty?
              -@others_tasks.each do |task|
                =render 'all_task', task: task, group: @group
            -else
              .padded
                There are no upcoming tasks covered by other team members.
          .tab-pane{id: "open"}
            -unless @open_tasks.empty?
              -@open_tasks.sort_by(&:task_date).each do |task|
                =render 'open_task', task: task, group: @group
            -else
              .padded
                There are no open tasks for this month!
    /
      .col-xs-12.col-md-5.card
        .section-title
          Events
          =link_to new_group_event_path(current_user.group) do
            %h4.add-new Add
        .section-contents
          .cal
            =link_to "<", params: {month: (@date.beginning_of_month-1).strftime("%B-%Y")}
            =@date.strftime("%B %Y")
            =link_to ">", :month => (@date.end_of_month+1).strftime("%B-%Y")
            =calendar_for @this_months_events, :year => @date.year, :month=> @date.month do |calendar|
              =calendar.head('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')
              -calendar.day(:day_method => :event_date) do |day, events|
                .day
                  =day.day
                  -for event in events
                    %ul
                      %li
                        =link_to event.event_title, group_event_path(@group, event.id)

#first-time-user.modal.fade
  .modal-dialog
    .modal-content
      .modal-header
        %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", type: "button"}X
        %h1 Hello, First-Timer!
      .modal-body
        %h4 This is a sweet CareWell modal!
      .modal-footer
        %button.btn.btn-default{"data-dismiss" => "modal", type: "button"} Close

:javascript
  $(document).ready(function () {

    //first time user
    if (#{current_user.sign_in_count} == 1) {
      //the JS below will make it ALWAYS show - need logic to only have it show 1x.
      $('.first-time-user').show();
      // check if the modal has been viewed this session
      if (getCookie("welcomeModalViewed") === "") {
        $('#first-time-user').modal('show');   // show the modal
        document.cookie = "welcomeModalViewed=true";  // set a cookie
      }

    }

    $('.first-time-user').on('click', function() {
      $(this).hide();
    });

    //second-time user

    if (#{@open_tasks.count} > 0) {
      $('.nav-pills li:first').removeClass('active');
      $('.nav-pills li:last').addClass('active');
      $('.tab-pane#all').removeClass('active');
      $('.tab-pane#open').addClass('active');
    }
  });

  // Cookie Functions
  // This gets the value of a cookie
  function getCookie(cookiename) {
    var name = cookiename + "=";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++) {
      var c = ca[i].trim();
      if (c.indexOf(name)==0) return c.substring(name.length,c.length);
    }
    return "";
  }